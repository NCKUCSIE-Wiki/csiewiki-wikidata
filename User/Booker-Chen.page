---
title: Booker-Chen (臣韞儒)
categories: User
...

# 簡介
* 國立成功大學 資訊工程學系 114 級 (2021 ~ 2025)

* GitHub: [`Booker-Chen`](https://github.com/Booker-Chen)
* HackMD: [`Booker-Chen`](https://hackmd.io/@Booker-Chen)

## 成果發表和貢獻

我給自己 8 分

* [dudect discussion](https://github.com/oreparaz/dudect/discussions/42)

老師常說，我們本該對這個世界有所貢獻，本該如此，即使是改錯字這種看似微不足道的改動，也是貢獻。在研讀 dudect 這篇論文時，發現一些不嚴謹以及不明白的地方，像是設閾值的設定、累積分布函數的繪製等。於是決定在 GitHub 的 dudect 中發起一個 discussion，向作者請教。

## 作業/隨堂測驗

* 補考共筆: [HackMD](https://hackmd.io/83Kvo3HTRb62AJl8uh1kSA)
* lab0: [HackMD](https://hackmd.io/jU6WxUrjTT2AIEYITXkbxQ) / [GitHub](https://github.com/Booker-Chen/lab0-c)
* Homework 5: [HackMD](https://hackmd.io/AM2-5na8S6q7TnKp3CBcsw)

我給自己 6 分

隨堂測驗因為作答表單有限時間，往往沒有認真解讀完程式碼，就丟給 ChatGPT 或胡亂作答，之後也沒有回去將程式碼好好解讀完，好似考完試就是學習的終點。
補考的部分只有完成 quicksort。

作業的部分完成 Homework 5，lab0 尚未整合 dudect 拿到 100。在寫作業的過程中老師對於我使用的詞彙進行修正，並且提供資訊科技詞彙翻譯讓我知道這樣胡亂翻譯會使得語意不清，從而難以推測英語原文的訴求，像是 traverse 應翻譯為「逐一走訪」而不是「遍歷」。在參閱 wikipedia 的內容時，也以英文的頁面為主，因為中文的頁面可能會因為胡亂的翻譯而使得語意不清。

## 期末專題

* 判定常數時間: [HackMD](https://hackmd.io/@sysprog/SyHrtSWDC)

我給自己 8 分

在製作期末專題的過程中，我將常數時間的 memcmp 餵給 ChatGPT 請它解釋程式碼。在閱讀其產生的解釋後發現它給我的解釋有錯，於是自己從頭開始自己研究程式碼，發現明明自己可以花比較少的時間完成的事情卻捨近求遠，依賴不完全正確的 ChatGPT。透過彙整其他學員的成果可以發現自己有的疑問別人可能也會有，像是設定閾值的函數可能有問題。出現自己沒想過的問題，比方說 unbiased sample variance 不能直接在分子上面用 sigma 累加後相減的原因是因為會發生 Catastrophic Cancellation。

## 與授課教師的互動

我給自己 8 分

在 5 月 29 日星期三下午 2 點與教授進行一對一面談決定期末專題，在討論過程中發現自己對於第一週教材內相關的問題都答不出來，甚至明明出現在教材裡的東西自己卻沒有看過，明明有好的教材卻花費大把時間在 Google 搜尋和 ChatGPT，捨近求遠。在與教授面談完之後決定期末專題為“判定常數時間”，在重新閱讀第一份教材之後，也對教授指定的 TODO 給出答覆。

在 6 月 28 日星期五晚上 9 點與教授進行補考，發現自己對於 Atomics 操作一知半解，無法對考試以及教授的提問給出答案，於是教授拿出第一週的 list.h 要求現場寫出環狀雙向鏈結串列的 quicksort。在當下發現自己的程式能力實在是有待加強，於是便與教授約定在繳交成績前完成 quicksort 以及 MPMC 的填答。

## 所見所聞所感

我給自己 6 分

當作者確定方向之後，便全心全意投入在做出自動飲料機，過程中運用自己的所學，遇到困難就解決困難，遇到不會的就學習並且找人一起合作，在過程中心力交瘁想放棄時適當的休息和找師長聊聊，最後在 14 個月之後成功做出了自動飲料機。作者在這篇回顧文中也有許多與老師向我們強調的理念相同，像是在第 5 篇中有提到自動飲料機如果製作出來，不管成本和效益能動就行，那根本不會有商家願意採用。第 13 篇中提到他需要知道要買多大容量的機器來裝冰塊，他不是靠感覺去決定，而是透過飲料店的實際數據來推估，對應到老師一直和我們強調我們做出來的東西不能有不確定的因素(不要一直說好像)。

回顧自身在本課程的投入狀況，選擇了修習 Linux 核心設計/實作這門課，卻並沒有像作者一樣選定好方向變全心全意地投入，學期過完四分之三了對於第一週的教材仍舊一知半解。有這麼多用心編纂的教材以及用心的教授，卻沒能善用這些資源，嘗試對世界做出貢獻，沒能成功「翻身」。


