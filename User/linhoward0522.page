---
title: linhoward0522(林溢泓)
categories: User
...

# 簡介
* 國立成功大學 資訊工程所 111 級 (2022 ~ present)

* GitHub: [`linhoward0522`](https://github.com/linhoward0522?tab=repositories)
* HackMD: [`linhoward0522`](https://hackmd.io/@linhoward0522)

# 2023 Linux 核心設計 春季班 自我評量
## 作業共筆

* lab0-c : [GitHub](https://github.com/linhoward0522/lab0-c) / [HackMD](https://hackmd.io/@linhoward0522/linux2023-lab0)
* fibdrv : [GitHub](https://github.com/linhoward0522/fibdrv) / [HackMD](https://hackmd.io/@linhoward0522/linux2023-fibdrv)
* khttpd : [GitHub](https://github.com/linhoward0522/khttpd) / [HackMD](https://hackmd.io/@linhoward0522/linux2023q1-ktcp)



## 測驗共筆

* quiz1 : [HackMD](https://hackmd.io/@linhoward0522/linux2023-quiz1)
* quiz2 : [HackMD](https://hackmd.io/@linhoward0522/linux2023-quiz2)
* quiz3 : [HackMD](https://hackmd.io/@linhoward0522/linux2023-quiz3)


## 期末專題

* Linux 核心專題: CPU 排程器研究 : [HackMD](https://hackmd.io/@sysprog/BJh9FdlS2)

## 修課心得

剛開始閱讀<每位程式開發者都該有的記憶體知識>這篇文章的時候覺得這個作者非常有勇氣，要是我絕對不敢做出這種為了創業而延畢的決定。然而，過程比結果更重要，因為"做自己真正想做的事情"這種經驗並不是每個人都能擁有。當我閱讀完這篇文章後。其中，有幾段話另我印象深刻 ：

* 「資工系的學生不會寫程式，機械系的學生不會做機械」
理論和基礎知識的學習是必要的，我們雖然聲稱在大學或研究所期間學習了許多技術與理論，但往往只是為了應付老師以及為了拿到漂亮的成績而已。我們必須要實際應用所學的知識，去解決實際遇到的問題，這樣才能真正理解並發展出相應的技能。
* 「Jserv說你不能現在就放棄，要是現在就放棄的話，你這輩子日後遇到這種等級的困難，就只會想逃避而已。」
在修這一堂課時，每週都要閱讀大量的教材以及面對大量的作業跟程式碼。當初會選擇修這堂課就是因為知道自己的能力不足，若不趁現在誠實面對自己，了解自己所缺少的東西後盡力補上，否則往後只會想放棄跟逃避。
* 「你最大的問題在太害怕失敗了，既然都已經決定要延畢做飲料機了，那就要好好做，才不會辜負當初自己的期望。你該學習的不是看到事情要完蛋了就去避免失敗，而是應該學習如何處理與承受失敗，你才能變得比以前更強大。」
不僅僅是這堂課。每個人在成長的過程中都會遇到失敗和挫折。然而，真正重要的是如何看待和應對這些挫折。將失敗視為學習的機會，並從中獲取寶貴的教訓。就像老師所說的，跟自己比較。比昨天的自己更強，才不會辜負自己的期望。

閱讀《Demystifying the Linux CPU Scheduler》這本書中，讓我可以從作業系統開始理解。接著包含 Linux 特殊的資料結構，以及介紹目前的 Linux CPU scheduler : CFS 一路演化至今的過程，及如何去實作的。接著還有如何透過調整參數來客製化排程器。最後則是利用實驗來驗證上述所介紹的。在做期末專題的時候，這本書給我帶來非常多的幫助，詳細解釋了過程中我的許多疑問，減少我大量 google 的時間。

## 自我評量 (1 ~ 10)

我給自己 9 分。這學期我幾乎把能用的時間都投入在這堂課上了，包含了上課、作業、小考，以及期末專題並閱讀多篇論文跟文獻。我從寒假就先開始學習 Ubuntu 系統安裝，熟悉 Git 操作，以及 Linux 命令等等這些非常基礎的地方開始學起。接著開學後是連續幾周 C 語言與作業的轟炸。最後是介紹 Linux 核心以及相關議題並同時進行期末專題。當時每周都深深覺得自己很爛。但秉持著誠實面對自己，缺什麼就補什麼的精神。雖然可能比不上其他同學，但是跟自己比，我認為我有許多的進步。扣的 1 分就用來告訴自己 Linux 核心永遠沒有學習完的一天，今天不學明天會更難。